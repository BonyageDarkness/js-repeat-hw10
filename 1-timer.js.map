{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst dataStart = document.querySelector('button');\nconst datetimePicker = document.querySelector('#datetime-picker');\nlet userSelectedDate;\ndataStart.setAttribute('disabled', 'disabled');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() < Date.now()) {\n      dataStart.setAttribute('disabled', 'disabled');\n      return alert('Please choose a date in the future');\n    } else {\n      dataStart.removeAttribute('disabled');\n    }\n    console.log(selectedDates[0]);\n    return (userSelectedDate = selectedDates[0]);\n  },\n};\n\nflatpickr(datetimePicker, options);\n\ndataStart.addEventListener('click', () => {\n  dataStart.setAttribute('disabled', 'disabled');\n  datetimePicker.setAttribute('disabled', 'disabled');\n  const interval = setInterval(() => {\n    const delta = userSelectedDate - Date.now();\n\n    if (delta <= 0) {\n      return clearInterval(interval);\n      dataStart.removeAttribute('disabled');\n      datetimePicker.removeAttribute('disabled');\n    } else {\n      convertMs(delta.data - days);\n    }\n    console.log(delta);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\niziToast.show({\n  title: 'Hey',\n  message: 'What would you like to add?',\n});\n"],"names":["dataStart","datetimePicker","userSelectedDate","options","selectedDates","flatpickr","interval","delta","convertMs","ms","days","hours","minutes","seconds","iziToast"],"mappings":"2GAKA,MAAMA,EAAY,SAAS,cAAc,QAAQ,EAC3CC,EAAiB,SAAS,cAAc,kBAAkB,EAChE,IAAIC,EACJF,EAAU,aAAa,WAAY,UAAU,EAE7C,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,OAAIA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCJ,EAAU,aAAa,WAAY,UAAU,EACtC,MAAM,oCAAoC,IAEjDA,EAAU,gBAAgB,UAAU,EAEtC,QAAQ,IAAII,EAAc,CAAC,CAAC,EACpBF,EAAmBE,EAAc,CAAC,EAC5C,CACF,EAEAC,EAAUJ,EAAgBE,CAAO,EAEjCH,EAAU,iBAAiB,QAAS,IAAM,CACxCA,EAAU,aAAa,WAAY,UAAU,EAC7CC,EAAe,aAAa,WAAY,UAAU,EAClD,MAAMK,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAQL,EAAmB,KAAK,IAAG,EAEzC,GAAIK,GAAS,EACX,OAAO,cAAcD,CAAQ,EAI7BE,EAAUD,EAAM,KAAO,IAAI,EAE7B,QAAQ,IAAIA,CAAK,CACnB,EAAG,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/BM,EAAS,KAAK,CACZ,MAAO,MACP,QAAS,6BACX,CAAC"}